# Define paths
$sourceFilePath = "C:\Source Files\U99.xlsx"
$rulesFilePath = "C:\rules.xlsx"
$coordinatorsPath = "C:\Coordinators\"

# Load the Excel COM object
$excel = New-Object -ComObject Excel.Application
$excel.Visible = $false
$excel.DisplayAlerts = $false

# Open the rules.xlsx file
$rulesWorkbook = $excel.Workbooks.Open($rulesFilePath)
$rulesSheet = $rulesWorkbook.Sheets.Item(1)

# Get the current month and year
$currentMonth = (Get-Date).ToString("MMMM")
$currentYear = (Get-Date).Year

# Get the last row with data in the B column of rules.xlsx
$lastRow = $rulesSheet.Cells($rulesSheet.Rows.Count, "B").End(-4162).Row

# Create a dictionary to hold filter criteria for each unique folder name
$filterCriteria = @{}

# Loop through the rows starting from the 3rd row
for ($row = 3; $row -le $lastRow; $row++) {
    # Get the file name from column B
    $fileName = $rulesSheet.Cells.Item($row, 2).Text

    # Collect filter values from columns E, F, G, H, I
    $filters = @{
        "CR" = $rulesSheet.Cells.Item($row, 5).Text
        "CT" = $rulesSheet.Cells.Item($row, 6).Text
        "CV" = $rulesSheet.Cells.Item($row, 7).Text
        "CX" = $rulesSheet.Cells.Item($row, 8).Text
        "CZ" = $rulesSheet.Cells.Item($row, 9).Text
    }

    # If the file name already exists in the dictionary, merge the filter values
    if ($filterCriteria.ContainsKey($fileName)) {
        foreach ($key in $filters.Keys) {
            if ($filters[$key] -ne "ALL") {
                $filterCriteria[$fileName][$key] += @($filters[$key])
            }
        }
    } else {
        # Otherwise, add a new entry to the dictionary
        $filterCriteria[$fileName] = $filters
    }
}

# Close the rules workbook
$rulesWorkbook.Close()

# Process each file name in the filter criteria
foreach ($fileName in $filterCriteria.Keys) {
    # Construct the folder path
    $folderPath = Join-Path $coordinatorsPath $fileName

    # Check if the folder exists, if not, create it
    if (-not (Test-Path -Path $folderPath)) {
        New-Item -ItemType Directory -Path $folderPath | Out-Null
    }

    # Construct the destination file name
    $destinationFileName = "${fileName}_${currentMonth}_${currentYear}.xlsx"
    $destinationFilePath = Join-Path $folderPath $destinationFileName

    # Copy the source file to a temporary location
    $tempFilePath = Join-Path $coordinatorsPath "Temp_$destinationFileName"
    Copy-Item -Path $sourceFilePath -Destination $tempFilePath -Force

    # Open the copied file
    $workbook = $excel.Workbooks.Open($tempFilePath)
    $sheet = $workbook.Sheets.Item(1)

    # Apply filters based on the criteria
    $filters = $filterCriteria[$fileName]
    foreach ($column in $filters.Keys) {
        $filterValues = $filters[$column] | Where-Object { $_ -ne "ALL" }
        if ($filterValues.Count -gt 0) {
            $columnIndex = 96 + ([int][char]$column[1]) - 65  # Convert CR, CT, etc. to column numbers
            $sheet.UsedRange.AutoFilter($columnIndex, $filterValues, 7)  # 7 = xlFilterValues
        }
    }

    # Save and close the workbook
    $workbook.SaveAs($destinationFilePath)
    $workbook.Close()

    # Remove the temporary file
    Remove-Item -Path $tempFilePath -Force
}

# Quit Excel application
$excel.Quit()

# Release COM objects to avoid file locking
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($sheet) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($workbook) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($excel) | Out-Null

# Remove variables
Remove-Variable sheet
Remove-Variable workbook
Remove-Variable excel
Remove-Variable rulesSheet
Remove-Variable rulesWorkbook

Write-Host "Folders created, files copied, data filtered, and Excel closed successfully."
