<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>AI Team Portal - Demo</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-4">
  <h1 class="text-2xl font-bold text-center">AI Team Tool (Demo)</h1>

  <div class="flex flex-col md:flex-row gap-4 mt-6">
    <!-- Admin Panel -->
    <div class="md:w-1/2 bg-white p-4 rounded shadow">
      <h2 class="text-xl font-semibold mb-2">🔒 Admin Panel</h2>
      <textarea id="adminData" class="w-full h-32 border p-2 mb-2" placeholder="Enter new info..."></textarea>
      <input type="file" id="fileUpload" accept="image/*,audio/*" class="mb-2"/>
      <button onclick="saveData()" class="bg-blue-500 text-white px-4 py-2 rounded">Save Data</button>
      <div id="adminHistory" class="mt-4 text-sm text-gray-700 max-h-60 overflow-y-auto"></div>
    </div>

    <!-- General Chat -->
    <div class="md:w-1/2 bg-white p-4 rounded shadow">
      <h2 class="text-xl font-semibold mb-2">💬 Ask AI</h2>
      <div id="chatBox" class="h-60 overflow-y-scroll border p-2 mb-2 bg-gray-50 text-sm"></div>
      <input id="userQuestion" class="w-full border p-2 mb-2" placeholder="Ask a question..."/>
      <button onclick="askAI()" class="bg-green-500 text-white px-4 py-2 rounded">Send Question</button>
    </div>
  </div>

  <script>
    let adminDataStore = JSON.parse(localStorage.getItem("adminDataStore") || "[]");

    function saveData() {
      const text = document.getElementById("adminData").value.trim();
      const fileInput = document.getElementById("fileUpload");

      if (text) {
        adminDataStore.push({ type: "text", content: text });
      }

      if (fileInput.files.length > 0) {
        const file = fileInput.files[0];
        const reader = new FileReader();
        reader.onload = function () {
          adminDataStore.push({ type: file.type.startsWith("image") ? "image" : "audio", content: reader.result });
          persistAndDisplay();
        };
        reader.readAsDataURL(file);
      } else {
        persistAndDisplay();
      }

      document.getElementById("adminData").value = "";
      fileInput.value = "";
    }

    function persistAndDisplay() {
      localStorage.setItem("adminDataStore", JSON.stringify(adminDataStore));
      updateAdminHistory();
    }

    function updateAdminHistory() {
      const div = document.getElementById("adminHistory");
      div.innerHTML = adminDataStore.map((d, i) => {
        if (d.type === "text") return `<div>${i + 1}. 📝 ${d.content}</div>`;
        if (d.type === "image") return `<div>${i + 1}. 🖼️ <img src="${d.content}" width="100"/></div>`;
        if (d.type === "audio") return `<div>${i + 1}. 🔊 <audio controls src="${d.content}" ></audio></div>`;
      }).join("");
    }

    function askAI() {
      const question = document.getElementById("userQuestion").value.trim();
      if (!question) return;

      const chatBox = document.getElementById("chatBox");
      chatBox.innerHTML += `<div><strong>You:</strong> ${question}</div>`;

      const context = adminDataStore.filter(d => d.type === "text").map(d => d.content).join("\n");
      const prompt = `Answer based on the following context:\n${context}\n\nQuestion: ${question}`;

      fetch("https://api-inference.huggingface.co/models/google/flan-t5-base", {
        method: "POST",
        headers: {
          Authorization: "Bearer hf_your_api_key_here", // Replace below
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ inputs: prompt })
      })
      .then(res => res.json())
      .then(data => {
        const reply = data?.[0]?.generated_text || "AI could not generate a response.";
        chatBox.innerHTML += `<div><strong>AI:</strong> ${reply}</div>`;
        document.getElementById("userQuestion").value = "";
        chatBox.scrollTop = chatBox.scrollHeight;
      })
      .catch(err => {
        chatBox.innerHTML += `<div><strong>AI:</strong> Error fetching response.</div>`;
        console.error(err);
      });
    }

    // Load history on start
    updateAdminHistory();
  </script>
</body>
</html>
