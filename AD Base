Sub Update_AG_Column()
    Dim wbSource As Workbook, wbTarget As Workbook, wbLatAm As Workbook
    Dim wsSource As Worksheet, wsTarget As Worksheet, wsLatAm As Worksheet
    Dim lastRow As Long, lastRowTarget As Long, lastRowLatAm As Long
    Dim filterCol As String, filterValue As String
    Dim countryCondition As String, dateRange As String
    Dim cell As Range
    Dim AGColNum As Long, filterColNum As Long
    Dim dictAO As Object
    Dim countryList As Variant
    Dim excludeMode As Boolean
    
    ' Set workbook references
    Set wbSource = ThisWorkbook  ' Ajith Macro V1.xlsm
    Set wbTarget = Workbooks("UA69_Updated.xlsx")
    Set wbLatAm = Workbooks("WMA BLR_BLC_Rules for Automation.xlsx")
    
    ' Set worksheet references
    Set wsSource = wbSource.Sheets("Job Code Description")
    Set wsTarget = wbTarget.Sheets("Output") ' Use Output sheet in UA69_Updated.xlsx
    Set wsLatAm = wbLatAm.Sheets("LatAm")
    
    ' Find last rows
    lastRow = wsSource.Cells(wsSource.Rows.Count, 1).End(xlUp).Row
    lastRowTarget = wsTarget.Cells(wsTarget.Rows.Count, 1).End(xlUp).Row
    lastRowLatAm = wsLatAm.Cells(wsLatAm.Rows.Count, 1).End(xlUp).Row

    ' AG column in UA69_Updated (Column 33 = AG)
    AGColNum = 33

    ' Store AO -> AG mapping from LatAm sheet in Dictionary
    Set dictAO = CreateObject("Scripting.Dictionary")
    
    Dim i As Long, j As Long, k As Long
    Dim AG_LatAm As String, AO_LatAm As String
    
    ' LatAm AO column = Column B, AG column = Column C
    Dim AOColNum As Long, AG_LatAmColNum As Long
    AOColNum = 2
    AG_LatAmColNum = 3
    
    ' Load AO -> AG mapping from LatAm sheet
    For k = 2 To lastRowLatAm
        AG_LatAm = wsLatAm.Cells(k, AG_LatAmColNum).Value
        AO_LatAm = wsLatAm.Cells(k, AOColNum).Value
        If Not dictAO.exists(AG_LatAm) Then
            dictAO.Add AG_LatAm, AO_LatAm
        End If
    Next k

    ' Loop through each row in Job Code Description sheet
    For i = 2 To lastRow  ' Assuming row 1 is headers
        filterCol = wsSource.Cells(1, i).Value  ' Get column name for filter
        filterValue = wsSource.Cells(i, 2).Value ' Value to check (2nd column)
        countryCondition = wsSource.Cells(i, 4).Value ' Country condition column
        dateRange = wsSource.Cells(i, 5).Value ' Date range column
        
        ' Find actual column number in UA69_Updated
        filterColNum = 0
        On Error Resume Next
        filterColNum = Application.Match(filterCol, wsTarget.Rows(1), 0)
        On Error GoTo 0
        
        ' If filter column not found, skip
        If filterColNum = 0 Then GoTo NextRow
        
        ' Parse country condition
        excludeMode = False
        If InStr(1, countryCondition, "All except", vbTextCompare) > 0 Then
            excludeMode = True
            countryCondition = Trim(Replace(countryCondition, "All except", ""))
        End If
        
        ' Split the country list into an array
        If Len(countryCondition) > 0 Then
            countryList = Split(countryCondition, ",")
            For k = LBound(countryList) To UBound(countryList)
                countryList(k) = Trim(countryList(k))
            Next k
        Else
            countryList = Array()
        End If

        ' Check if filterValue exists in LatAm AG column and get AO value
        Dim AO_Match As String
        If dictAO.exists(filterValue) Then
            AO_Match = dictAO(filterValue)
        Else
            GoTo NextRow ' Skip if AG not found in LatAm sheet
        End If

        ' Loop through UA69_Updated file and update AG column
        For j = 2 To lastRowTarget
            ' Match AO column in UA69_Updated with AO value from LatAm sheet
            If wsTarget.Cells(j, filterColNum).Value = AO_Match Then
                ' Country check
                Dim country As String
                country = wsTarget.Cells(j, 4).Value ' Assuming country is in 4th column
                
                If excludeMode Then
                    ' If "All except" mode, exclude listed countries
                    For k = LBound(countryList) To UBound(countryList)
                        If StrComp(country, countryList(k), vbTextCompare) = 0 Then GoTo NextTargetRow
                    Next k
                ElseIf UBound(countryList) >= 0 Then
                    ' If specific countries are listed, include only them
                    Dim found As Boolean: found = False
                    For k = LBound(countryList) To UBound(countryList)
                        If StrComp(country, countryList(k), vbTextCompare) = 0 Then
                            found = True
                            Exit For
                        End If
                    Next k
                    If Not found Then GoTo NextTargetRow
                End If
                
                ' Date range check
                If Not IsEmpty(dateRange) Then
                    Dim dateValue As Variant, startDate As Date, endDate As Date
                    dateValue = wsTarget.Cells(j, 5).Value ' Assuming date is in 5th column
                    
                    If IsDate(dateValue) Then
                        Dim parts() As String
                        If InStr(1, dateRange, "-") > 0 Then
                            parts = Split(dateRange, "-")
                            If UBound(parts) = 1 Then
                                On Error Resume Next
                                startDate = DateValue(Trim(parts(0)))
                                endDate = DateValue(Trim(parts(1)))
                                On Error GoTo 0
                                
                                If IsDate(startDate) And IsDate(endDate) Then
                                    If dateValue < startDate Or dateValue > endDate Then GoTo NextTargetRow
                                End If
                            End If
                        End If
                    End If
                End If
                
                ' Update AG column in UA69_Updated file
                wsTarget.Cells(j, AGColNum).Value = wsSource.Cells(i, wsSource.Cells(i, Columns.Count).End(xlToLeft).Column).Value
            End If
NextTargetRow:
        Next j
NextRow:
    Next i
    
    MsgBox "AG Column updated successfully!", vbInformation
End Sub
