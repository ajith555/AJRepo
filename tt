# Add the Outlook COM object
Add-Type -AssemblyName "Microsoft.Office.Interop.Outlook"

# Outlook Folder Path
$folderPath = "Your Folder Path"  # Replace with the actual folder path in Outlook

# Output Folder Path
$outputFolder = "Path to save attachments"  # Replace with the desired output folder path

# Create an instance of Outlook
$outlook = New-Object -ComObject Outlook.Application
$namespace = $outlook.GetNamespace("MAPI")

# Get the Outlook Folder
$folder = $namespace.GetDefaultFolder([Microsoft.Office.Interop.Outlook.OlDefaultFolders]::olFolderInbox).Folders.Item($folderPath)

# Loop through the Items in the Folder
foreach ($item in $folder.Items)
{
    if ($item.Attachments.Count -gt 0)
    {
        # Loop through Attachments in the Email
        foreach ($attachment in $item.Attachments)
        {
            # Save Attachment to Output Folder
            $attachmentPath = Join-Path -Path $outputFolder -ChildPath $attachment.FileName
            $attachment.SaveAsFile($attachmentPath)
        }
    }
}

# Release COM objects
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($attachment) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($item) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($folder) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($namespace) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($outlook) | Out-Null

# Show completion message
Write-Host "Email attachments downloaded successfully!"

# Open the output folder
Invoke-Item -Path $outputFolder
