# Import the COM object for Excel
$excel = New-Object -ComObject Excel.Application

# Set up the Chrome driver
$chromeDriverPath = "path\to\chromedriver.exe"
$chromeOptions = New-Object OpenQA.Selenium.Chrome.ChromeOptions
$chromeOptions.AddArguments("--headless") # Run Chrome headlessly to avoid opening a visible browser window
$driver = New-Object OpenQA.Selenium.Chrome.ChromeDriver($chromeDriverPath, $chromeOptions)

# Navigate to the website
$driver.Navigate().GoToUrl("https://www.example.com")

# Define the xpath links to fetch data and the corresponding cell ranges in Excel
$dataMappings = @{
    "//div[@class='class1']" = "A1:A1"
    "//div[@class='class2']" = "A2:A2"
    "//div[@class='class3']" = "A3:A3"
}

# Fetch the data and put it in an array
$data = foreach ($entry in $dataMappings.GetEnumerator()) {
    $element = $driver.FindElementByXPath($entry.Key)
    $element.Text
}

# Get the current date and time as a string
$timestamp = Get-Date -Format "yyyyMMdd-HHmmss"

# Set the output file path
$outputPath = "path\to\output_$timestamp.xlsx"

# Check if the output file already exists
if (Test-Path $outputPath) {
    # Open the existing workbook
    $workbook = $excel.Workbooks.Open($outputPath)
    $worksheet = $workbook.Worksheets.Item(1)
} else {
    # Create a new workbook and worksheet
    $workbook = $excel.Workbooks.Add()
    $worksheet = $workbook.Worksheets.Item(1)
}

# Write the data to the worksheet
foreach ($entry in $dataMappings.GetEnumerator()) {
    $cellRange = $entry.Value
    $dataIndex = [array]::IndexOf($dataMappings.Keys, $entry.Key)
    $worksheet.Range($cellRange).Value2 = $data[$dataIndex]
}

# Save the workbook
$workbook.SaveAs($outputPath)
$workbook.Close($false)
$excel.Quit()
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($excel) | Out-Null

# Close the driver
$driver.Close()
