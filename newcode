Option Explicit

Dim objExcelApplication As Excel.Application
Dim objExcelWorkbook As Excel.Workbook
Dim objExcelWorksheet As Excel.Worksheet
Dim objinbox As Outlook.Folder
Dim objABCFolder As Outlook.Folder

Sub ExportEmailsNotReplied()
    Dim targetEmail As String
    targetEmail = "kushal-ajith.shetty@ubs.com"
    Dim objNamespace As Outlook.Namespace
    Dim objRootFolder As Outlook.Folder
    Dim objDuplicateFolder As Outlook.Folder

    ' Create Excel objects
    Set objExcelApplication = New Excel.Application
    objExcelApplication.Visible = True ' Set Excel application visible before working with columns

    Set objExcelWorkbook = objExcelApplication.Workbooks.Add
    Set objExcelWorksheet = objExcelWorkbook.Worksheets(1)

    ' Set fixed row height for all rows in the worksheet
    objExcelWorksheet.Rows.RowHeight = 20

    With objExcelWorksheet
        .Cells(1, 1) = "Subject"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 2) = "Received"
        .Cells(1, 2).Font.Bold = True
        .Cells(1, 3) = "Sender"
        .Cells(1, 3).Font.Bold = True
        .Cells(1, 4) = "Recipients"
        .Cells(1, 4).Font.Bold = True
        .Cells(1, 5) = "Excerpts"
        .Cells(1, 5).Font.Bold = True
    End With

    ' Get the specified email account and its Inbox folder
    Set objNamespace = Outlook.GetNamespace("MAPI")
    Set objRootFolder = objNamespace.Folders(targetEmail)
    Set objinbox = objRootFolder.Folders("Inbox")

    ' Check if the "(1) AGED" folder exists or create it if it doesn't
    Dim foundABC As Boolean
    foundABC = False
    Dim objFolder As Outlook.Folder
    For Each objFolder In objinbox.Folders
        If objFolder.Name = "(1) AGED" Then
            foundABC = True
            Set objABCFolder = objFolder
            Exit For
        End If
    Next objFolder

    If Not foundABC Then
        Set objABCFolder = objinbox.Folders.Add("(1) AGED", olFolderInbox)
    End If

    ' Check and process the folders to export unreplied emails
    ProcessFolders objinbox, objABCFolder

    ' Format the Excel columns and rows
    With objExcelWorksheet
        .Columns("A:D").AutoFit
        .Columns("E").ColumnWidth = 100
        .Columns("E").WrapText = False
    End With

    ' Move replied emails from "(1) AGED" to "(1) AGED Replied" folder
    MoveRepliedEmails objABCFolder

    ' Check if the "(1) AGED Duplicate" folder exists or create it if it doesn't
    Dim foundDuplicate As Boolean
    foundDuplicate = False
    For Each objFolder In objinbox.Folders
        If objFolder.Name = "(1) AGED Duplicate" Then
            foundDuplicate = True
            Set objDuplicateFolder = objFolder
            Exit For
        End If
    Next objFolder

    If Not foundDuplicate Then
        Set objDuplicateFolder = objinbox.Folders.Add("(1) AGED Duplicate", olFolderInbox)
    End If

    ' Move emails with duplicate subjects from "(1) AGED" to "(1) AGED Duplicate" folder
    Dim objMail As Outlook.MailItem
    Dim i As Long
    For i = 1 To objABCFolder.Items.Count
        If objABCFolder.Items(i).Class = olMail Then
            Set objMail = objABCFolder.Items(i)
            If IsDuplicateSubject(objMail, objABCFolder) Then
                objMail.Move objDuplicateFolder
            End If
        End If
    Next i

    ' Remove duplicates from the Excel worksheet
    RemoveDuplicatesFromWorksheet objExcelWorksheet

    MsgBox "Complete!", vbExclamation

    ' Clean up
    Set objExcelWorksheet = Nothing
    Set objExcelWorkbook = Nothing
End Sub

Sub ProcessFolders(ByVal objCurrentfolder As Outlook.Folder, ByVal objDestinationFolder As Outlook.Folder)
    Dim i As Long
    Dim objMail As Outlook.MailItem
    Dim strReplied As String
    Dim nDateDiff As Integer
    Dim nReplyDateDiff As Integer
    Dim nLastRow As Integer
    Dim Recipient As Outlook.Recipient

    On Error Resume Next

    For i = objCurrentfolder.Items.Count To 1 Step -1
        If objCurrentfolder.Items(i).Class = olMail Then
            Set objMail = objCurrentfolder.Items(i)
            strReplied = objMail.propertyAccessor.GetProperty("http://schemas.microsoft.com/mapi/proptag/0x10810003")

            ' Add the condition to check if the sender name is to be excluded
            Dim excludedSenders As String
            excludedSenders = "Sakaria, Pramod" ' Add other sender names as needed
            If InStr(1, excludedSenders, objMail.SenderName, vbTextCompare) = 0 Then
                If (Not (strReplied = "102")) And (Not (strReplied = "103")) Then
                    nDateDiff = DateDiff("d", objMail.SentOn, Now)
                    nReplyDateDiff = DateDiff("d", objMail.ReceivedTime, Now)

                    ' Check if email is from the last 3 days and not replied for more than 2 days
                    If nDateDiff <= 4 And nReplyDateDiff > 3 And nDateDiff >= 0 And nReplyDateDiff >= 0 Then
                        nLastRow = objExcelWorksheet.Range("A" & objExcelWorksheet.Rows.Count).End(xlUp).Row + 1

                        With objExcelWorksheet
                            .Cells(nLastRow, 1) = objMail.Subject
                            .Cells(nLastRow, 2) = objMail.ReceivedTime
                            .Cells(nLastRow, 3) = objMail.SenderName
                        End With

                        Dim recipients As String
                        recipients = ""
                        For Each Recipient In objMail.Recipients
                            recipients = recipients & Recipient.Name & "; "
                        Next Recipient
                        recipients = Left(recipients, Len(recipients) - 2) ' Remove trailing "; "

                        With objExcelWorksheet
                            .Cells(nLastRow, 4) = recipients ' Add recipients' names to the new column
                            .Cells(nLastRow, 5) = Left(Trim(objMail.Body), 100) & "..." ' Excerpts
                        End With

                        ' Move the retrieved email to the "(1) AGED" folder
                        If objCurrentfolder.Name <> objDestinationFolder.Name Then
                            objMail.Move objDestinationFolder
                        End If
                    End If
                End If
            End If
        End If
    Next i

    On Error GoTo 0

    If objCurrentfolder.Folders.Count > 0 Then
        Dim objSubfolder As Outlook.Folder
        For Each objSubfolder In objCurrentfolder.Folders
            ProcessFolders objSubfolder, objDestinationFolder
        Next objSubfolder
    End If
End Sub

Sub MoveRepliedEmails(ByVal objSourceFolder As Outlook.Folder)
    Dim objRepliedFolder As Outlook.Folder
    Dim objMail As Outlook.MailItem
    Dim i As Long

    ' Check if the "(1) AGED Replied" folder exists or create it if it doesn't
    Dim foundReplied As Boolean
    foundReplied = False
    Dim objFolder As Outlook.Folder
    For Each objFolder In objinbox.Folders
        If objFolder.Name = "(1) AGED Replied" Then
            foundReplied = True
            Set objRepliedFolder = objFolder
            Exit For
        End If
    Next objFolder

    If Not foundReplied Then
        Set objRepliedFolder = objinbox.Folders.Add("(1) AGED Replied", olFolderInbox)
    End If

    ' Move replied emails from "(1) AGED" to "(1) AGED Replied" folder
    For i = objSourceFolder.Items.Count To 1 Step -1
        If objSourceFolder.Items(i).Class = olMail Then
            Set objMail = objSourceFolder.Items(i)
            Dim strReplied As String
            strReplied = objMail.propertyAccessor.GetProperty("http://schemas.microsoft.com/mapi/proptag/0x10810003")
            If (strReplied = "102" Or strReplied = "103") Then
                objMail.Move objRepliedFolder
            End If
        End If
    Next i
End Sub

Function IsDuplicateSubject(ByVal objMail As Outlook.MailItem, ByVal objCurrentFolder As Outlook.Folder) As Boolean
    Dim i As Long
    Dim objItem As Outlook.MailItem
    Dim subject As String

    subject = objMail.Subject
    If Len(subject) > 0 Then
        For i = 1 To objCurrentFolder.Items.Count
            If objCurrentFolder.Items(i).Class = olMail Then
                Set objItem = objCurrentFolder.Items(i)
                If objItem.Subject = subject And objItem.EntryID <> objMail.EntryID Then
                    IsDuplicateSubject = True
                    Exit Function
                End If
            End If
        Next i
    End If

    IsDuplicateSubject = False
End Function

Sub RemoveDuplicatesFromWorksheet(ByVal ws As Excel.Worksheet)
    Dim lastRow As Long
    Dim rng As Excel.Range
    Dim subjectDict As Object ' Dictionary to track duplicate subjects

    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    Set rng = ws.Range(ws.Cells(1, 1), ws.Cells(lastRow, 1)) ' Only consider the "Subject" column (Column A)

    ' Create a Dictionary to track duplicate subjects
    Set subjectDict = CreateObject("Scripting.Dictionary")

    Dim subjectCell As Range
    Dim rowIndex As Long
    For rowIndex = lastRow To 2 Step -1 ' Start from the last row and loop backward
        Set subjectCell = rng.Cells(rowIndex, 1)
        If Not subjectCell.Value = "" Then
            If Not subjectDict.Exists(subjectCell.Value) Then
                ' Add subject to the dictionary if it doesn't exist
                subjectDict.Add subjectCell.Value, subjectCell.Row
            Else
                ' If the subject is already in the dictionary, delete the entire row
                ws.Rows(subjectCell.Row).Delete
            End If
        End If
    Next rowIndex
End Sub
