# Set the path to your CSV file
$csvPath = "C:\path\to\your\file.csv"

# Read the CSV file
$urls = Import-Csv -Path $csvPath

# Define the Chrome executable path
$chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe"

# Define the download directory
$downloadDirectory = "C:\Users\shettyka\Downloads"  # Adjust as per your system

# Open Chrome with the first URL
Start-Process -FilePath $chromePath -ArgumentList $urls[0].url

# Function to navigate to URL in the same Chrome tab
function NavigateToUrlInSameTab {
    param(
        [string]$url
    )

    # Get Chrome processes
    $chromeProcesses = Get-Process -Name "chrome"

    # Loop through Chrome processes
    foreach ($process in $chromeProcesses) {
        # Get main window handle
        $hwnd = $process.MainWindowHandle

        # Check if handle is valid
        if ($hwnd -ne 0) {
            # Load URL in the existing tab
            $scriptBlock = {
                param($hwnd, $url)
                $ie = New-Object -ComObject InternetExplorer.Application
                $ie.Navigate($url)
                $ie.Visible = $true
            }
            Invoke-Command -ScriptBlock $scriptBlock -ArgumentList $hwnd, $url
            return $true
        }
    }

    return $false
}

# Loop through each URL in the CSV, starting from the second one
foreach ($url in $urls[1..$urls.Count]) {
    # Wait for 10 seconds
    Start-Sleep -Seconds 10

    # Check if a file has been downloaded
    $downloadedFiles = Get-ChildItem -Path $downloadDirectory
    $fileDownloaded = $false
    $downloadedFileName = $null
    foreach ($file in $downloadedFiles) {
        if ($file.Extension -eq ".crdownload" -or $file.Extension -eq ".tmp") {
            # Skip files being currently downloaded
            continue
        }
        elseif ($file.LastWriteTime -ge (Get-Date).AddSeconds(-10)) {
            # File has been downloaded within the last 10 seconds
            $fileDownloaded = $true
            $downloadedFileName = $file.Name
            break
        }
    }

    # If file downloaded, update Excel with the downloaded file name
    if ($fileDownloaded) {
        $url | Add-Member -MemberType NoteProperty -Name "DownloadedFile" -Value $downloadedFileName
        $url | Export-Csv -Path $csvPath -NoTypeInformation -Append
    }

    # Navigate to the next URL in the same Chrome tab
    $success = NavigateToUrlInSameTab $url.url
    if (-not $success) {
        Write-Host "Failed to navigate to URL: $($url.url)"
    }
}
