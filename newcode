Option Explicit ' Add this line at the beginning of the module

Dim objExcelApplication As Excel.Application
Dim objExcelWorkbook As Excel.Workbook
Dim objExcelWorksheet As Excel.Worksheet
Dim outlookAccount As String
Dim dataFolderNames() As String
Dim moveFolderName As String

Sub ExportEmailsNotReplied()
    Dim objInbox As Outlook.Folder
    Dim objABCtest As Outlook.Folder
    Dim objOrigin As Outlook.Folder
    Dim outlookNamespace As Outlook.NameSpace
    Dim moveFolder As Outlook.Folder
    
    ' Set your Outlook email account and move folder here:
    outlookAccount = "your_email_account@example.com"
    moveFolderName = "ABC move" ' folder where the emails will be moved after fetching data
    
    ' Add folders to fetch from
    dataFolderNames = Split("Inbox,ABCtest,Origin", ",") ' Separate folder names with commas
    
    Set objExcelApplication = CreateObject("Excel.Application")
    Set objExcelWorkbook = objExcelApplication.Workbooks.Add
    Set objExcelWorksheet = objExcelWorkbook.Worksheets(1)
    
    With objExcelWorksheet
        .Cells(1, 1).Value = "Subject"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 2).Value = "Received"
        .Cells(1, 2).Font.Bold = True
        .Cells(1, 3).Value = "Sender"
        .Cells(1, 3).Font.Bold = True
        .Cells(1, 4).Value = "Excerpts"
        .Cells(1, 4).Font.Bold = True
    End With
    
    objExcelApplication.Visible = True
    objExcelWorkbook.Activate
    
    ' Get the Outlook namespace and move folder
    Set outlookNamespace = Outlook.Application.GetNamespace("MAPI")
    Set moveFolder = outlookNamespace.Folders(outlookAccount).Folders(moveFolderName)
    
    Dim folderName As Variant
    For Each folderName In dataFolderNames
        Select Case folderName
            Case "Inbox"
                Set objInbox = outlookNamespace.Folders(outlookAccount).Folders(folderName)
                Call ProcessFolders(objInbox, moveFolder)
            Case "ABCtest"
                Set objABCtest = outlookNamespace.Folders(outlookAccount).Folders(folderName)
                Call ProcessFolders(objABCtest, moveFolder)
            Case "Origin"
                Set objOrigin = outlookNamespace.Folders(outlookAccount).Folders(folderName)
                Call ProcessFolders(objOrigin, moveFolder)
        End Select
    Next folderName
    
    With objExcelWorksheet
        .Columns("A:C").AutoFit
        .Rows.RowHeight = 15
        .Columns("D").ColumnWidth = 100
        .Columns("D").WrapText = False
    End With
    
    MsgBox "Complete!", vbExclamation
End Sub

Sub ProcessFolders(ByVal objCurrentFolder As Outlook.Folder, ByVal objMoveFolder As Outlook.Folder)
    Dim i As Long
    Dim objMail As Outlook.MailItem
    Dim strReplied As String
    Dim nDateDiff As Integer
    Dim nLastRow As Integer
    
    For i = objCurrentFolder.Items.Count To 1 Step -1
        If objCurrentFolder.Items(i).Class = olMail Then
            Set objMail = objCurrentFolder.Items(i)
            strReplied = objMail.PropertyAccessor.GetProperty("http://schemas.microsoft.com/mapi/proptag/0x10810003")
            
            If (Not (strReplied = "102")) And (Not (strReplied = "103")) Then
                nDateDiff = DateDiff("d", objMail.SentOn, Now)
                
                If nDateDiff < 7 Then
                    nLastRow = objExcelWorksheet.Range("A" & objExcelWorksheet.Rows.Count).End(xlUp).Row + 1
                    
                    With objExcelWorksheet
                        .Cells(nLastRow, 1).Value = objMail.Subject
                        .Cells(nLastRow, 2).Value = objMail.ReceivedTime
                        .Cells(nLastRow, 3).Value = objMail.SenderName
                        .Cells(nLastRow, 4).Value = Left(Trim(objMail.Body), 100) & "..."
                    End With
                    objMail.Move objMoveFolder ' Move the email to the "ABC move" folder
                End If
            End If
        End If
    Next
    
    If objCurrentFolder.Folders.Count > 0 Then
        Dim objSubfolder As Outlook.Folder
        For Each objSubfolder In objCurrentFolder.Folders
            Call ProcessFolders(objSubfolder, objMoveFolder)
        Next
    End If
End Sub
