Option Explicit
 
Dim objExcelApplication As Excel.Application
Dim objExcelWorkbook As Excel.Workbook
Dim objExcelWorksheet As Excel.Worksheet
Dim objinbox As Outlook.Folder

Sub ExportEmailsNotReplied()
    Dim targetEmail As String
    targetEmail = "kushal-ajith.shetty@ubs.com"
    Dim objNamespace As Outlook.Namespace
    Dim objRootFolder As Outlook.Folder
    Dim objABCFolder As Outlook.Folder
    Dim objRepliedFolder As Outlook.Folder
    Dim objDuplicatesFolder As Outlook.Folder
    
    ' Step 1: Retrieve the specified email account's Inbox folder in Outlook
    Set objNamespace = Outlook.GetNamespace("MAPI")
    Set objRootFolder = objNamespace.Folders(targetEmail)
    Set objinbox = objRootFolder.Folders("Inbox")
    
    ' Step 2: Check each email and its subfolders to meet the conditions
    ProcessFolders objinbox, objinbox

    ' Step 3: Check and create/move emails in the "(1) AGED" folder
    CheckAndCreateAGEDFolder objinbox, objABCFolder, objRepliedFolder

    ' Step 4: Check and move emails with duplicate subjects in the "(1) AGED" folder
    CheckAndMoveDuplicateSubjects objABCFolder, objDuplicatesFolder

    ' Step 5: Create Excel workbook and worksheet
    Set objExcelApplication = New Excel.Application
    objExcelApplication.Visible = True ' Set Excel application visible before working with columns
    Set objExcelWorkbook = objExcelApplication.Workbooks.Add
    Set objExcelWorksheet = objExcelWorkbook.Worksheets(1)

    ' Step 6: Set up the columns in the Excel worksheet with headers
    With objExcelWorksheet
        .Cells(1, 1) = "Subject"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 2) = "Received"
        .Cells(1, 2).Font.Bold = True
        .Cells(1, 3) = "Sender"
        .Cells(1, 3).Font.Bold = True
        .Cells(1, 4) = "Recipients"
        .Cells(1, 4).Font.Bold = True
        .Cells(1, 5) = "Excerpts"
        .Cells(1, 5).Font.Bold = True
    End With

    ' Step 7 and Step 8: Extract relevant information and add it to the Excel worksheet
    ProcessAndAddToExcel objABCFolder

    ' Step 9: Format the Excel columns and rows, and remove duplicates
    FormatAndRemoveDuplicatesFromWorkbook

    ' Step 10: Display completion message
    MsgBox "Complete!", vbExclamation
End Sub

Sub ProcessFolders(ByVal objCurrentfolder As Outlook.Folder, ByVal objDestinationFolder As Outlook.Folder)
    Dim i As Long
    Dim objMail As Outlook.MailItem
    Dim strReplied As String
    Dim nDateDiff As Integer
    Dim nReplyDateDiff As Integer
    Dim nLastRow As Integer
    Dim Recipient As Outlook.Recipient
    
    On Error Resume Next
    
    For i = objCurrentfolder.Items.Count To 1 Step -1
        If objCurrentfolder.Items(i).Class = olMail Then
            Set objMail = objCurrentfolder.Items(i)
            strReplied = objMail.propertyAccessor.GetProperty("http://schemas.microsoft.com/mapi/proptag/0x10810003")
            
            ' Add the condition to check if the sender name is to be excluded
            Dim excludedSenders As String
            excludedSenders = "Shetty, Kushal-Ajith; Sakaria, Pramod" ' Add other sender names as needed
            If InStr(1, excludedSenders, objMail.SenderName, vbTextCompare) = 0 Then
                If (Not (strReplied = "102")) And (Not (strReplied = "103")) Then
                    nDateDiff = DateDiff("d", objMail.SentOn, Now)
                    nReplyDateDiff = DateDiff("d", objMail.ReceivedTime, Now)
                
                    ' Check if email is from the last 3 days and not replied for more than 2 days
                    If nDateDiff <= 3 And nReplyDateDiff > 2 Then
                        nLastRow = objExcelWorksheet.Range("A" & objExcelWorksheet.Rows.Count).End(xlUp).Row + 1
                    
                        With objExcelWorksheet
                            .Cells(nLastRow, 1) = objMail.Subject
                            .Cells(nLastRow, 2) = objMail.ReceivedTime
                            .Cells(nLastRow, 3) = objMail.SenderName
                        End With
                    
                        Dim recipients As String
                        recipients = ""
                        For Each Recipient In objMail.Recipients
                            recipients = recipients & Recipient.Name & "; "
                        Next Recipient
                        recipients = Left(recipients, Len(recipients) - 2) ' Remove trailing "; "
                    
                        With objExcelWorksheet
                            .Cells(nLastRow, 4) = recipients ' Add recipients' names to the new column
                            .Cells(nLastRow, 5) = Left(Trim(objMail.Body), 100) & "..." ' Excerpts
                        End With

                        ' Move the retrieved email to the "(1) AGED" folder
                        If objCurrentfolder.Name <> objDestinationFolder.Name Then
                            objMail.Move objDestinationFolder
                        End If
                    End If
                End If
            End If
        End If
    Next i

    On Error GoTo 0
    
    If objCurrentfolder.Folders.Count > 0 Then
        Dim objSubfolder As Outlook.Folder
        For Each objSubfolder In objCurrentfolder.Folders
            ProcessFolders objSubfolder, objDestinationFolder
        Next objSubfolder
    End If
End Sub

Sub CheckAndCreateAGEDFolder(ByVal objCurrentFolder As Outlook.Folder, ByRef objABCFolder As Outlook.Folder, ByRef objRepliedFolder As Outlook.Folder)
    Dim objFolder As Outlook.Folder
    Dim foundABC As Boolean
    foundABC = False
    
    For Each objFolder In objCurrentFolder.Folders
        If objFolder.Name = "(1) AGED" Then
            foundABC = True
            Set objABCFolder = objFolder
            Exit For
        End If
    Next objFolder
    
    If Not foundABC Then
        Set objABCFolder = objCurrentFolder.Folders.Add("(1) AGED", olFolderInbox)
    End If

    ' Check and move replied emails in the AGED folder to the Replied folder
    If Not objRepliedFolder Is Nothing Then
        Dim objItem As Outlook.MailItem
        Dim i As Long
        For i = objABCFolder.Items.Count To 1 Step -1
            If objABCFolder.Items(i).Class = olMail Then
                Set objItem = objABCFolder.Items(i)
                If objItem.Replied = True Then
                    objItem.Move objRepliedFolder
                End If
            End If
        Next i
    End If
End Sub

Sub CheckAndMoveDuplicateSubjects(ByVal objABCFolder As Outlook.Folder, ByRef objDuplicatesFolder As Outlook.Folder)
    Dim dictSubjects As Object
    Set dictSubjects = CreateObject("Scripting.Dictionary")
    Dim objItem As Outlook.MailItem
    Dim i As Long
    Dim subject As String
    
    ' Find and move emails with duplicate subjects in the AGED folder to Duplicates folder
    For i = objABCFolder.Items.Count To 1 Step -1
        If objABCFolder.Items(i).Class = olMail Then
            Set objItem = objABCFolder.Items(i)
            subject = objItem.Subject
            If Not dictSubjects.Exists(subject) Then
                dictSubjects.Add subject, 1
            Else
                ' Move the duplicate email to the Duplicates folder
                If objDuplicatesFolder Is Nothing Then
                    Set objDuplicatesFolder = objABCFolder.Folders.Add("Duplicates", olFolderInbox)
                End If
                objItem.Move objDuplicatesFolder
            End If
        End If
    Next i
End Sub

Sub ProcessAndAddToExcel(ByVal objABCFolder As Outlook.Folder)
    Dim objItem As Outlook.MailItem
    Dim nLastRow As Integer
    Dim recipients As String
    Dim Recipient As Outlook.Recipient
    
    For Each objItem In objABCFolder.Items
        If objItem.Class = olMail Then
            nLastRow = objExcelWorksheet.Range("A" & objExcelWorksheet.Rows.Count).End(xlUp).Row + 1
            
            With objExcelWorksheet
                .Cells(nLastRow, 1) = objItem.Subject
                .Cells(nLastRow, 2) = objItem.ReceivedTime
                .Cells(nLastRow, 3) = objItem.SenderName
            End With
            
            recipients = ""
            For Each Recipient In objItem.Recipients
                recipients = recipients & Recipient.Name & "; "
            Next Recipient
            recipients = Left(recipients, Len(recipients) - 2) ' Remove trailing "; "
            
            With objExcelWorksheet
                .Cells(nLastRow, 4) = recipients ' Add recipients' names to the new column
                .Cells(nLastRow, 5) = Left(Trim(objItem.Body), 100) & "..." ' Excerpts
            End With
        End If
    Next objItem
End Sub

Sub FormatAndRemoveDuplicatesFromWorkbook()
    Dim lastRow As Long
    Dim lastCol As Long
    Dim ws As Worksheet
    Dim rng As Range
    
    Set ws = objExcelWorkbook.Worksheets(1)
    lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
    Set rng = ws.Range(ws.Cells(1, 1), ws.Cells(lastRow, lastCol))
    rng.RemoveDuplicates Columns:=Array(1, 2, 3, 4, 5), Header:=xlYes
End Sub
