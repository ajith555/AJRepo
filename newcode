Option Explicit ' Add this line at the beginning of the module

' Constants for email account and folder names
Const EmailAccount As String = "YourEmail@domain.com" ' Update with your email account
Const MainFolderName As String = "Inbox" ' Update with the main folder name you want to check
Const MoveToFolderName As String = "ABC move" ' Update with the name of the folder to move emails to

' Array to hold the names of additional folders to check for emails
Dim AdditionalFolders() As String
Const Folder1 As String = "Folder1" ' Update with the name of additional folder 1 (if any)
Const Folder2 As String = "Folder2" ' Update with the name of additional folder 2 (if any)

Dim objExcelApplication As Excel.Application
Dim objExcelWorkbook As Excel.Workbook
Dim objExcelWorksheet As Excel.Worksheet

Sub ExportEmailsNotReplied()
    Dim objInbox As Outlook.Folder
    Dim objNamespace As Outlook.Namespace

    Set objExcelApplication = CreateObject("Excel.Application")
    Set objExcelWorkbook = objExcelApplication.Workbooks.Add
    Set objExcelWorksheet = objExcelWorkbook.Worksheets(1)
    
    With objExcelWorksheet
        .Cells(1, 1).Value = "Subject"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 2).Value = "Received"
        .Cells(1, 2).Font.Bold = True
        .Cells(1, 3).Value = "Sender"
        .Cells(1, 3).Font.Bold = True
        .Cells(1, 4).Value = "Excerpts"
        .Cells(1, 4).Font.Bold = True
    End With
    
    objExcelApplication.Visible = True
    objExcelWorkbook.Activate
    
    ' Get the desired Outlook folder using the email account and main folder name
    Set objNamespace = Application.GetNamespace("MAPI")
    Set objInbox = objNamespace.Folders(EmailAccount).Folders(MainFolderName)
    
    ' Populate additional folders array
    PopulateAdditionalFolders
    
    ' Process the main folder and additional folders
    Call ProcessFolder(objInbox)
    
    With objExcelWorksheet
        .Columns("A:C").AutoFit
        .Rows.RowHeight = 15
        .Columns("D").ColumnWidth = 100
        .Columns("D").WrapText = False
    End With
    
    MsgBox "Complete!", vbExclamation
End Sub

Sub ProcessFolder(ByVal objCurrentFolder As Outlook.Folder)
    Dim i As Long
    Dim objMail As Outlook.MailItem
    Dim strReplied As String
    Dim nDateDiff As Integer
    Dim nLastRow As Integer
    
    For i = objCurrentFolder.Items.Count To 1 Step -1
        If objCurrentFolder.Items(i).Class = olMail Then
            Set objMail = objCurrentFolder.Items(i)
            strReplied = objMail.PropertyAccessor.GetProperty("http://schemas.microsoft.com/mapi/proptag/0x10810003")
            
            If (Not (strReplied = "102")) And (Not (strReplied = "103")) Then
                nDateDiff = DateDiff("d", objMail.SentOn, Now)
                
                If nDateDiff < 7 Then
                    nLastRow = objExcelWorksheet.Range("A" & objExcelWorksheet.Rows.Count).End(xlUp).Row + 1
                    
                    With objExcelWorksheet
                        .Cells(nLastRow, 1).Value = objMail.Subject
                        .Cells(nLastRow, 2).Value = objMail.ReceivedTime
                        .Cells(nLastRow, 3).Value = objMail.SenderName
                        .Cells(nLastRow, 4).Value = Left(Trim(objMail.Body), 100) & "..."
                    End With
                    
                    ' Move the email to the specified folder
                    objMail.Move objCurrentFolder.Folders(MoveToFolderName)
                End If
            End If
        End If
    Next
    
    If objCurrentFolder.Folders.Count > 0 Then
        Dim objSubfolder As Outlook.Folder
        For Each objSubfolder In objCurrentFolder.Folders
            Call ProcessFolder(objSubfolder)
        Next
    End If
End Sub

Sub PopulateAdditionalFolders()
    ' Update this section with additional folder names as needed
    ' If there are no additional folders, simply leave this subroutine empty
    AdditionalFolders = Array(Folder1, Folder2)
End Sub
