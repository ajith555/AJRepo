Option Explicit

Dim objExcelApplication As Excel.Application
Dim objExcelWorkbook As Excel.Workbook
Dim objExcelWorksheet As Excel.Worksheet
Dim objOutlookNamespace As Outlook.Namespace
Dim objSourceFolder As Outlook.Folder
Dim objMoveFolder As Outlook.Folder

Sub ExportEmailsNotReplied()
    On Error GoTo ErrorHandler ' Add error handling
    Dim objInbox As Outlook.Folder
    Dim emailAccount As String
    
    ' Update the email account and folder names here
    emailAccount = "YourEmailAccount@example.com"
    Set objSourceFolder = GetOutlookFolder(emailAccount, "Inbox") ' Add more folder names here if needed
    Set objMoveFolder = GetOutlookFolder(emailAccount, "ABC move") ' Change "ABC move" to the destination folder name
    
    ' Check if the source and move folders are set correctly
    If objSourceFolder Is Nothing Then
        MsgBox "Source folder not found. Please check the folder name.", vbExclamation
        Exit Sub
    End If
    
    If objMoveFolder Is Nothing Then
        MsgBox "Move folder not found. Please check the folder name.", vbExclamation
        Exit Sub
    End If
    
    Set objExcelApplication = CreateObject("Excel.Application")
    Set objExcelWorkbook = objExcelApplication.Workbooks.Add
    Set objExcelWorksheet = objExcelWorkbook.Worksheets(1)
    
    With objExcelWorksheet
        .Cells(1, 1).Value = "Subject"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 2).Value = "Received"
        .Cells(1, 2).Font.Bold = True
        .Cells(1, 3).Value = "Sender"
        .Cells(1, 3).Font.Bold = True
        .Cells(1, 4).Value = "Excerpts"
        .Cells(1, 4).Font.Bold = True
    End With
    
    objExcelApplication.Visible = True
    objExcelWorkbook.Activate
    
    Call ProcessFolders(objSourceFolder)
    
    With objExcelWorksheet
        .Columns("A:C").AutoFit
        .Columns("D").ColumnWidth = 100
        .Columns("D").WrapText = False
    End With
    
    MsgBox "Complete!", vbExclamation
    Exit Sub ' Exit the subroutine to skip the error handler
ErrorHandler:
    MsgBox "An error occurred: " & Err.Description, vbExclamation
End Sub

Function GetOutlookFolder(ByVal emailAccount As String, ByVal folderName As String) As Outlook.Folder
    On Error Resume Next
    Dim objOutlookApp As Outlook.Application
    Dim objNamespace As Outlook.Namespace
    Dim objRecipient As Outlook.Recipient
    
    Set objOutlookApp = New Outlook.Application
    Set objNamespace = objOutlookApp.GetNamespace("MAPI")
    
    ' Get the recipient for the specified email account
    Set objRecipient = objNamespace.CreateRecipient(emailAccount)
    objRecipient.Resolve
    
    If objRecipient.Resolved Then
        ' Get the folder for the specified folder name
        Set GetOutlookFolder = objNamespace.GetSharedDefaultFolder(objRecipient, olFolderInbox).Folders(folderName)
    End If
    
    Set objOutlookApp = Nothing
    Set objNamespace = Nothing
    Set objRecipient = Nothing
End Function

Sub ProcessFolders(ByVal objCurrentFolder As Outlook.Folder)
    Dim i As Long
    Dim objMail As Outlook.MailItem
    Dim strReplied As String
    Dim nDateDiff As Integer
    Dim nLastRow As Integer
    
    For i = objCurrentFolder.Items.Count To 1 Step -1
        If objCurrentFolder.Items(i).Class = olMail Then
            Set objMail = objCurrentFolder.Items(i)
            strReplied = objMail.PropertyAccessor.GetProperty("http://schemas.microsoft.com/mapi/proptag/0x10810003")
            
            If (Not (strReplied = "102")) And (Not (strReplied = "103")) Then
                nDateDiff = DateDiff("d", objMail.SentOn, Now)
                
                If nDateDiff < 7 Then
                    nLastRow = objExcelWorksheet.Range("A" & objExcelWorksheet.Rows.Count).End(xlUp).Row + 1
                    
                    With objExcelWorksheet
                        .Cells(nLastRow, 1).Value = objMail.Subject
                        .Cells(nLastRow, 2).Value = objMail.ReceivedTime
                        .Cells(nLastRow, 3).Value = objMail.SenderName
                        .Cells(nLastRow, 4).Value = Left(Trim(objMail.Body), 100) & "..."
                    End With
                    
                    ' Move the email to the specified destination folder
                    objMail.Move objMoveFolder
                End If
            End If
        End If
    Next
    
    If objCurrentFolder.Folders.Count > 0 Then
        Dim objSubfolder As Outlook.Folder
        For Each objSubfolder In objCurrentFolder.Folders
            Call ProcessFolders(objSubfolder)
        Next
    End If
End Sub
