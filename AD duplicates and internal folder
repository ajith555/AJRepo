Dim objExcelApplication As Object ' Use Object type to late-bind Excel
Dim objExcelWorkbook As Object
Dim objExcelWorksheet As Object
Dim objNamespace As Outlook.Namespace
Dim objAccount As Outlook.Account
Dim objInbox As Outlook.Folder

Sub ExportEmailsNotReplied()
    ' Define the email ID of the account to use
    Dim accountEmail As String
    accountEmail = "youremail@example.com" ' Replace with the desired email ID
    
    ' Initialize Outlook objects
    Set objNamespace = Application.GetNamespace("MAPI")
    Set objInbox = objNamespace.GetDefaultFolder(olFolderInbox)

    ' Find the specified email account
    For Each objAccount In objNamespace.Accounts
        If objAccount.SmtpAddress = accountEmail Then
            ' Set the folder to the Inbox of the selected account
            Set objInbox = objAccount.DeliveryStore.GetDefaultFolder(olFolderInbox)
            Exit For
        End If
    Next objAccount

    If objInbox Is Nothing Then
        MsgBox "Specified account not found.", vbExclamation
        Exit Sub
    End If

    ' Initialize a reference to the AGED Internal folder
    Dim agedInternalFolder As Outlook.Folder
    On Error Resume Next
    Set agedInternalFolder = objInbox.Folders("(1) AGED Internal")
    On Error GoTo 0
    
    ' If the AGED Internal folder doesn't exist, create it
    If agedInternalFolder Is Nothing Then
        Set agedInternalFolder = objInbox.Folders.Add("(1) AGED Internal")
    End If

    ' Create Excel objects
    Set objExcelApplication = CreateObject("Excel.Application")
    Set objExcelWorkbook = objExcelApplication.Workbooks.Add
    Set objExcelWorksheet = objExcelWorkbook.Worksheets(1)

    ' Set headers in the Excel worksheet
    With objExcelWorksheet
        .Cells(1, 1) = "Subject"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 2) = "Received"
        .Cells(1, 2).Font.Bold = True
        .Cells(1, 3) = "Sender"
        .Cells(1, 3).Font.Bold = True
        .Cells(1, 4) = "Receiver"
        .Cells(1, 4).Font.Bold = True
        .Cells(1, 5) = "Excerpts"
        .Cells(1, 5).Font.Bold = True
    End With

    ' Make Excel visible
    objExcelApplication.Visible = True
    objExcelWorkbook.Activate

    ' Format Excel worksheet
    With objExcelWorksheet
        .Columns("A:E").AutoFit
        .Rows.RowHeight = 15
        .Columns("E").ColumnWidth = 100
        .Columns("E").WrapText = False
    End With

    ' Initialize a dictionary to track unique email subjects and their latest received times
    Dim emailDict As Object
    Set emailDict = CreateObject("Scripting.Dictionary")

    ' Process folders and emails
    Call ProcessFolders(objInbox, emailDict, agedInternalFolder)
End Sub

Sub ProcessFolders(ByVal objCurrentFolder As Outlook.Folder, ByVal emailDict As Object, ByVal agedInternalFolder As Outlook.Folder)
    Dim i As Long
    Dim objMail As Outlook.MailItem
    Dim strReplied As String
    Dim nDateDiff As Integer
    Dim nLastRow As Integer

    For i = objCurrentFolder.Items.Count To 1 Step -1
        If objCurrentFolder.Items(i).Class = olMail Then
            Set objMail = objCurrentFolder.Items(i)
            strReplied = objMail.PropertyAccessor.GetProperty("http://schemas.microsoft.com/mapi/proptag/0x10810003")
            
            ' Calculate the time difference in hours (48 hours = 2 days)
            nDateDiff = DateDiff("h", objMail.ReceivedTime, Now)
            
            If (Not (strReplied = 102)) And (Not (strReplied = 103)) And (nDateDiff <= 48) Then
                ' Check if the email subject is in the dictionary
                If emailDict.Exists(objMail.Subject) Then
                    ' If the email is a duplicate, compare received times
                    If objMail.ReceivedTime > emailDict(objMail.Subject) Then
                        ' Update the dictionary with the latest received time
                        emailDict(objMail.Subject) = objMail.ReceivedTime
                        ' Copy the email to the AGED Internal folder
                        objMail.Copy agedInternalFolder
                    Else
                        ' This is an older duplicate, skip it
                        objMail.Delete
                    End If
                Else
                    ' This is a unique email, add it to the dictionary
                    emailDict(objMail.Subject) = objMail.ReceivedTime
                End If
            End If
        End If
    Next

    ' Recursively process subfolders
    If objCurrentFolder.Folders.Count > 0 Then
        Dim objSubfolder As Outlook.Folder
        For Each objSubfolder In objCurrentFolder.Folders
            Call ProcessFolders(objSubfolder, emailDict, agedInternalFolder)
        Next
    End If

    ' Update the Excel worksheet after processing all emails in the current folder
    UpdateExcelWorksheet emailDict
End Sub

Sub UpdateExcelWorksheet(ByVal emailDict As Object)
    Dim nLastRow As Integer
    Dim objMail As Outlook.MailItem
    
    ' Late-bind Excel worksheet
    nLastRow = objExcelWorksheet.Cells(objExcelWorksheet.Rows.Count, "A").End(-4162).Row + 1
    
    For Each objMail In agedInternalFolder.Items
        ' Add the email to the Excel worksheet
        With objExcelWorksheet
            .Cells(nLastRow, 1) = objMail.Subject
            .Cells(nLastRow, 2) = objMail.ReceivedTime
            .Cells(nLastRow, 3) = objMail.SenderName
            .Cells(nLastRow, 4) = objMail.To ' Receiver's Name
            .Cells(nLastRow, 5) = Left(Trim(objMail.Body), 100) & "..."
        End With
        nLastRow = nLastRow + 1
    Next objMail
End Sub
