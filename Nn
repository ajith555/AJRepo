Dim objInbox As Outlook.Folder
Dim objNamespace As Outlook.NameSpace
Dim objDestFolder As Outlook.Folder

Sub CopyEmailsToAgedFolder()
    ' Initialize Outlook objects
    Set objNamespace = Application.GetNamespace("MAPI")
    Set objInbox = objNamespace.GetDefaultFolder(olFolderInbox)
    
    ' Specify the destination folder name
    Dim destFolderName As String
    destFolderName = "(1) AGED Internal"
    
    ' Check if the destination folder exists, and create it if not
    On Error Resume Next
    Set objDestFolder = objInbox.Folders(destFolderName)
    On Error GoTo 0
    
    If objDestFolder Is Nothing Then
        ' The folder doesn't exist, so create it
        Set objDestFolder = objInbox.Folders.Add(destFolderName)
    End If

    ' Process folders and copy emails
    Call ProcessFolders(objInbox, objDestFolder)
End Sub

Sub ProcessFolders(ByVal objCurrentFolder As Outlook.Folder, ByVal objDestFolder As Outlook.Folder)
    Dim i As Long
    Dim objMail As Outlook.MailItem
    Dim strReplied As String
    Dim nDateDiff As Integer

    For i = objCurrentFolder.Items.Count To 1 Step -1
        If objCurrentFolder.Items(i).Class = olMail Then
            Set objMail = objCurrentFolder.Items(i)
            strReplied = objMail.PropertyAccessor.GetProperty("http://schemas.microsoft.com/mapi/proptag/0x10810003")
            
            ' Calculate the time difference in hours (48 hours = 2 days)
            nDateDiff = DateDiff("h", objMail.ReceivedTime, Now)
            
            If (Not (strReplied = "102")) And (Not (strReplied = "103")) And (nDateDiff <= 48) Then
                ' Copy the email by creating a new item in the destination folder
                Dim copiedMail As Outlook.MailItem
                Set copiedMail = objDestFolder.Items.Add
                copiedMail.Subject = objMail.Subject
                copiedMail.ReceivedTime = objMail.ReceivedTime
                copiedMail.SenderName = objMail.SenderName
                copiedMail.Body = Left(Trim(objMail.Body), 100) & "..."
                copiedMail.Save ' Save the copied email
                
                ' Optionally, you can delete the original email if needed
               ' objMail.Delete
            End If
        End If
    Next

    ' Recursively process subfolders
    If objCurrentFolder.Folders.Count > 0 Then
        For Each objSubfolder In objCurrentFolder.Folders
            Call ProcessFolders(objSubfolder, objDestFolder)
        Next
    End If
End Sub
