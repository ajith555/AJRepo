Option Explicit

Dim objExcelApplication As Object
Dim objExcelWorkbook As Object
Dim objExcelWorksheet As Object
Dim objNamespace As Object
Dim objSentItemsFolder As Object
Dim HoursToFetch As Integer ' Number of hours to fetch emails

Sub FetchRepliedEmails()
    ' Set the number of hours to fetch emails
    HoursToFetch = 24 ' Change this value to the desired number of hours
    
    ' Create Excel objects
    Set objExcelApplication = CreateObject("Excel.Application")
    objExcelApplication.Visible = True ' Set Excel application visible before working with columns

    Set objExcelWorkbook = objExcelApplication.Workbooks.Add
    Set objExcelWorksheet = objExcelWorkbook.Worksheets(1)
    
    ' Set fixed row height for all rows in the worksheet
    objExcelWorksheet.Rows.RowHeight = 20

    With objExcelWorksheet
        .Cells(1, 1) = "Subject"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 2) = "Received Time"
        .Cells(1, 2).Font.Bold = True
        .Cells(1, 3) = "Response Time"
        .Cells(1, 3).Font.Bold = True
        .Cells(1, 4) = "Sender"
        .Cells(1, 4).Font.Bold = True
    End With
    
    ' Get the Outlook Namespace and "Sent Items" folder
    Set objNamespace = GetObject("", "Outlook.Application").GetNamespace("MAPI")
    Set objSentItemsFolder = objNamespace.GetDefaultFolder(5) ' olFolderSentMail

    ' Fetch and display replied emails and their response times
    FetchAndDisplayRepliedEmails objSentItemsFolder

    ' Format the Excel columns and rows
    With objExcelWorksheet
        .Columns("A:D").AutoFit
    End With

    ' Clean up
    Set objExcelWorksheet = Nothing
    Set objExcelWorkbook = Nothing
End Sub

Sub FetchAndDisplayRepliedEmails(ByVal objFolder As Object)
    Dim objItem As Object
    Dim rowIndex As Integer
    
    rowIndex = 2 ' Start from the second row (first row is for headers)
    
    For Each objItem In objFolder.Items
        If TypeOf objItem Is Object Then ' Check if the item is an object
            Dim objMail As Object
            Set objMail = objItem ' Cast the item to an object
            
            ' Check if the email is within the specified number of hours
            If DateDiff("h", objMail.ReceivedTime, Now) <= HoursToFetch Then
                If IsRepliedEmail(objMail) Then
                    Dim conversation As Object
                    Dim conversationMessage As Object
                    Set conversation = objMail.GetConversation
                    If Not conversation Is Nothing Then
                        For Each conversationMessage In conversation.GetTable
                            ' Check if the message is a mail item and not the original email
                            If TypeOf conversationMessage.Item = Object And conversationMessage.Subject <> objMail.Subject Then
                                With objExcelWorksheet
                                    .Cells(rowIndex, 1) = conversationMessage.Subject
                                    .Cells(rowIndex, 2) = conversationMessage.ReceivedTime
                                    .Cells(rowIndex, 3) = objMail.ReceivedTime ' Display Received Time of the original message
                                    .Cells(rowIndex, 4) = objMail.SenderName
                                End With
                                rowIndex = rowIndex + 1
                            End If
                        Next conversationMessage
                    End If
                End If
            End If
        End If
    Next objItem
End Sub

Function IsRepliedEmail(ByVal objMail As Object) As Boolean
    ' Function to check if an email is a reply
    Dim conversation As Object
    Set conversation = objMail.GetConversation
    If Not conversation Is Nothing Then
        If conversation.GetTable.Count > 1 Then
            IsRepliedEmail = True
        End If
    End If
End Function
